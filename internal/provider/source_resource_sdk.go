// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"encoding/json"
	"github.com/aballiet/terraform-provider-airbyte/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SourceResourceModel) ToSharedSourceCreate() *shared.SourceCreate {
	sourceDefinitionID := r.SourceDefinitionID.ValueString()
	var connectionConfiguration interface{}
	_ = json.Unmarshal([]byte(r.ConnectionConfiguration.ValueString()), &connectionConfiguration)
	workspaceID := r.WorkspaceID.ValueString()
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	out := shared.SourceCreate{
		SourceDefinitionID:      sourceDefinitionID,
		ConnectionConfiguration: connectionConfiguration,
		WorkspaceID:             workspaceID,
		Name:                    name,
		SecretID:                secretID,
	}
	return &out
}

func (r *SourceResourceModel) RefreshFromSharedSourceRead(resp *shared.SourceRead) {
	r.Icon = types.StringPointerValue(resp.Icon)
	r.Name = types.StringValue(resp.Name)
	r.SourceDefinitionID = types.StringValue(resp.SourceDefinitionID)
	r.SourceID = types.StringValue(resp.SourceID)
	r.SourceName = types.StringValue(resp.SourceName)
	r.WorkspaceID = types.StringValue(resp.WorkspaceID)
}

func (r *SourceResourceModel) ToSharedSourceIDRequestBody() *shared.SourceIDRequestBody {
	sourceID := r.SourceID.ValueString()
	out := shared.SourceIDRequestBody{
		SourceID: sourceID,
	}
	return &out
}

func (r *SourceResourceModel) ToSharedSourceUpdate() *shared.SourceUpdate {
	sourceID := r.SourceID.ValueString()
	var connectionConfiguration interface{}
	_ = json.Unmarshal([]byte(r.ConnectionConfiguration.ValueString()), &connectionConfiguration)
	name := r.Name.ValueString()
	secretID := new(string)
	if !r.SecretID.IsUnknown() && !r.SecretID.IsNull() {
		*secretID = r.SecretID.ValueString()
	} else {
		secretID = nil
	}
	out := shared.SourceUpdate{
		SourceID:                sourceID,
		ConnectionConfiguration: connectionConfiguration,
		Name:                    name,
		SecretID:                secretID,
	}
	return &out
}
