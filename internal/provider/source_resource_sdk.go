// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"airbyte/internal/sdk/pkg/models/shared"
	"encoding/json"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func (r *SourceResourceModel) ToCreateSDKType() *shared.SourceCreate {
	var connectionConfiguration interface{}
	_ = json.Unmarshal([]byte(r.ConnectionConfiguration.ValueString()), &connectionConfiguration)
	name := r.Name.ValueString()
	sourceDefinitionID := r.SourceDefinitionID.ValueString()
	workspaceID := r.WorkspaceID.ValueString()
	out := shared.SourceCreate{
		ConnectionConfiguration: connectionConfiguration,
		Name:                    name,
		SourceDefinitionID:      sourceDefinitionID,
		WorkspaceID:             workspaceID,
	}
	return &out
}

func (r *SourceResourceModel) ToUpdateSDKType() *shared.SourceUpdate {
	var connectionConfiguration interface{}
	_ = json.Unmarshal([]byte(r.ConnectionConfiguration.ValueString()), &connectionConfiguration)
	name := r.Name.ValueString()
	sourceID := r.SourceID.ValueString()
	out := shared.SourceUpdate{
		ConnectionConfiguration: connectionConfiguration,
		Name:                    name,
		SourceID:                sourceID,
	}
	return &out
}

func (r *SourceResourceModel) ToDeleteSDKType() *shared.SourceIDRequestBody {
	sourceID := r.SourceID.ValueString()
	out := shared.SourceIDRequestBody{
		SourceID: sourceID,
	}
	return &out
}

func (r *SourceResourceModel) RefreshFromCreateResponse(resp *shared.InvalidInputExceptionInfo) {
	if resp.ExceptionClassName != nil {
		r.ExceptionClassName = types.StringValue(*resp.ExceptionClassName)
	} else {
		r.ExceptionClassName = types.StringNull()
	}
	r.ExceptionStack = nil
	for _, v := range resp.ExceptionStack {
		r.ExceptionStack = append(r.ExceptionStack, types.StringValue(v))
	}
	r.Message = types.StringValue(resp.Message)
	r.ValidationErrors = nil
	for _, validationErrorsItem := range resp.ValidationErrors {
		var validationErrors1 InvalidInputProperty
		if validationErrorsItem.InvalidValue != nil {
			validationErrors1.InvalidValue = types.StringValue(*validationErrorsItem.InvalidValue)
		} else {
			validationErrors1.InvalidValue = types.StringNull()
		}
		if validationErrorsItem.Message != nil {
			validationErrors1.Message = types.StringValue(*validationErrorsItem.Message)
		} else {
			validationErrors1.Message = types.StringNull()
		}
		validationErrors1.PropertyPath = types.StringValue(validationErrorsItem.PropertyPath)
		r.ValidationErrors = append(r.ValidationErrors, validationErrors1)
	}
}

func (r *SourceResourceModel) RefreshFromUpdateResponse(resp *shared.InvalidInputExceptionInfo) {
	r.RefreshFromCreateResponse(resp)
}
