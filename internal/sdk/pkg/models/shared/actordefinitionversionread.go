// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ActorDefinitionVersionRead struct {
	DockerRepository string `json:"dockerRepository"`
	DockerImageTag   string `json:"dockerImageTag"`
	SupportsDbt      bool   `json:"supportsDbt"`
	// describes a normalization config for destination definition version
	NormalizationConfig NormalizationDestinationDefinitionConfig `json:"normalizationConfig"`
	IsOverrideApplied   bool                                     `json:"isOverrideApplied"`
	SupportLevel        *SupportLevel                            `json:"supportLevel,omitempty"`
	SupportState        SupportState                             `json:"supportState"`
	BreakingChanges     *ActorDefinitionVersionBreakingChanges   `json:"breakingChanges,omitempty"`
}

func (o *ActorDefinitionVersionRead) GetDockerRepository() string {
	if o == nil {
		return ""
	}
	return o.DockerRepository
}

func (o *ActorDefinitionVersionRead) GetDockerImageTag() string {
	if o == nil {
		return ""
	}
	return o.DockerImageTag
}

func (o *ActorDefinitionVersionRead) GetSupportsDbt() bool {
	if o == nil {
		return false
	}
	return o.SupportsDbt
}

func (o *ActorDefinitionVersionRead) GetNormalizationConfig() NormalizationDestinationDefinitionConfig {
	if o == nil {
		return NormalizationDestinationDefinitionConfig{}
	}
	return o.NormalizationConfig
}

func (o *ActorDefinitionVersionRead) GetIsOverrideApplied() bool {
	if o == nil {
		return false
	}
	return o.IsOverrideApplied
}

func (o *ActorDefinitionVersionRead) GetSupportLevel() *SupportLevel {
	if o == nil {
		return nil
	}
	return o.SupportLevel
}

func (o *ActorDefinitionVersionRead) GetSupportState() SupportState {
	if o == nil {
		return SupportState("")
	}
	return o.SupportState
}

func (o *ActorDefinitionVersionRead) GetBreakingChanges() *ActorDefinitionVersionBreakingChanges {
	if o == nil {
		return nil
	}
	return o.BreakingChanges
}
