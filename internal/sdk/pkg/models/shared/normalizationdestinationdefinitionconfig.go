// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/aballiet/terraform-provider-airbyte/internal/sdk/pkg/utils"
)

// NormalizationDestinationDefinitionConfig - describes a normalization config for destination definition version
type NormalizationDestinationDefinitionConfig struct {
	// whether the destination definition supports normalization.
	Supported *bool `default:"false" json:"supported"`
	// a field indicating the name of the repository to be used for normalization. If the value of the flag is NULL - normalization is not used.
	NormalizationRepository *string `json:"normalizationRepository,omitempty"`
	// a field indicating the tag of the docker repository to be used for normalization.
	NormalizationTag *string `json:"normalizationTag,omitempty"`
	// a field indicating the type of integration dialect to use for normalization.
	NormalizationIntegrationType *string `json:"normalizationIntegrationType,omitempty"`
}

func (n NormalizationDestinationDefinitionConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *NormalizationDestinationDefinitionConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *NormalizationDestinationDefinitionConfig) GetSupported() *bool {
	if o == nil {
		return nil
	}
	return o.Supported
}

func (o *NormalizationDestinationDefinitionConfig) GetNormalizationRepository() *string {
	if o == nil {
		return nil
	}
	return o.NormalizationRepository
}

func (o *NormalizationDestinationDefinitionConfig) GetNormalizationTag() *string {
	if o == nil {
		return nil
	}
	return o.NormalizationTag
}

func (o *NormalizationDestinationDefinitionConfig) GetNormalizationIntegrationType() *string {
	if o == nil {
		return nil
	}
	return o.NormalizationIntegrationType
}
