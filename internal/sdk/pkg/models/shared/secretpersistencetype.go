// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SecretPersistenceType string

const (
	SecretPersistenceTypeTesting SecretPersistenceType = "testing"
	SecretPersistenceTypeGoogle  SecretPersistenceType = "google"
	SecretPersistenceTypeVault   SecretPersistenceType = "vault"
	SecretPersistenceTypeAws     SecretPersistenceType = "aws"
)

func (e SecretPersistenceType) ToPointer() *SecretPersistenceType {
	return &e
}

func (e *SecretPersistenceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "testing":
		fallthrough
	case "google":
		fallthrough
	case "vault":
		fallthrough
	case "aws":
		*e = SecretPersistenceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SecretPersistenceType: %v", v)
	}
}
